plugins {
    id 'java'
}

group = 'me.itsmcb'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url 'https://jitpack.io' }
    maven {
        name = 'citizens-repo'
        url = 'https://maven.citizensnpcs.co/repo'
    }
    // PAPI
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    // Paper
    compileOnly 'io.papermc.paper:paper-api:1.19-R0.1-SNAPSHOT'
    // Citizens
    compileOnly('net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT') {
        exclude group: '*', module: '*'
    }
    // LuckPerms
    compileOnly 'net.luckperms:api:5.4'
    // NoteBlock API
    implementation 'com.github.koca2000:NoteBlockAPI:1.6.1'
    // Placeholder API
    compileOnly 'me.clip:placeholderapi:2.11.1'
    // VexelCore
    compileOnly files('/home/martin/GitHub/VexelCore/bukkit/build/libs/VexelCore-Bukkit-1.0.1-SNAPSHOT.jar')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
